// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Util = require("./Util.bs.js");
var Tenant = require("./Tenant.bs.js");
var Js_dict = require("bs-platform/lib/js/js_dict.js");
var Js_json = require("bs-platform/lib/js/js_json.js");
var Project = require("./Project.bs.js");
var Belt_List = require("bs-platform/lib/js/belt_List.js");
var Connection = require("./Connection.bs.js");
var Caml_option = require("bs-platform/lib/js/caml_option.js");
var Json_decode = require("@glennsl/bs-json/src/Json_decode.bs.js");

function decodeRObjects(parser, json) {
  var obj_dict = Js_json.decodeObject(json);
  if (obj_dict === undefined) {
    return Util.decodeFail("Unable to decode resources objects");
  }
  var olist = Belt_List.fromArray(Js_dict.values(Caml_option.valFromOption(obj_dict)));
  return Belt_List.map(olist, parser);
}

function parseResources(json) {
  return {
          projects: Json_decode.field("projects", (function (param) {
                  return decodeRObjects(Project.parse, param);
                }), json),
          connections: Json_decode.field("connections", (function (param) {
                  return decodeRObjects(Connection.parse, param);
                }), json),
          tenants: Json_decode.field("tenants", (function (param) {
                  return decodeRObjects(Tenant.parse, param);
                }), json)
        };
}

function parse(json) {
  return {
          resources: Json_decode.field("resources", parseResources, json)
        };
}

exports.decodeRObjects = decodeRObjects;
exports.parseResources = parseResources;
exports.parse = parse;
/* Util Not a pure module */
